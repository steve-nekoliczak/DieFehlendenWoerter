openapi: "3.0.0"
info:
  description: REST API for de_exercise.
  version: "1.0.0"
  title: REST API for de_exercise.

servers:
  - url: /api

paths:
  /exercise/get_paragraph:
    get:
      operationId: api.exercise.get_paragraph
      tags:
        - Exercise
      summary: Get a paragraph exercise.
      description: Get a paragraph exercise.
      parameters:
        - name: document_title
          in: query
          description: Title of document.
          schema:
            type: string
          required: True
        - name: paragraph_index
          in: query
          description: Paragraph number to get.
          schema:
            type: integer
          required: True
        - name: ex_types
          in: query
          description: Type of exercises to get.
          schema:
            type: array
            items:
              type: string
          required: False
      responses:
        200:
          description: Successfully returned a paragraph exercise.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exercises'

  /exercise/get_document_list:
    get:
      operationId: api.exercise.get_document_list
      tags:
        - Exercise
      summary: Get a list of all the distinct document titles.
      description: Get a list of all the distinct document titles.
      responses:
        200:
          description: Successfully returned a list of document titles.
          content:
            application/json:
              schema:
                type: array
                items: {}

  /exercise/get_ex_type_list:
    get:
      operationId: api.exercise.get_ex_type_list
      tags:
        - Exercise
      summary: Get a list of all the distinct exercise types.
      description: Get a list of all the distinct exercise types.
      parameters:
        - name: document_title
          in: query
          description: Title of document that exercises are on.
          schema:
            type: string
          required: True
      responses:
        200:
          description: Successfully returned a list of exercise types.
          content:
            application/json:
              schema:
                type: array
                items: {}

  /grader/post_ex_attempt:
    get:
      operationId: api.grader.post_ex_attempt
      tags:
        - Grader
      summary: Post results for a user's exercise attempt.
      description: Get a paragraph exercise.
      parameters:
        - name: ex_id
          in: query
          description: MongoDB _id for the exercise.
          schema:
            type: string
          required: True
        - name: topic_word_index
          in: query
          description: Index of the topic word for the exercise.
          schema:
            type: integer
          required: True
        - name: guess
          in: query
          description: User's guess for the exercise.
          schema:
            type: string
          required: True
        - name: timestamp
          in: query
          description: Timestamp for when the exercise occurred. If not supplied, then a timestamp will be created for when it was sent to this API.
          schema:
            type: string
            format: date-time
          required: False
      responses:
        200:
          description: Successfully received the exercise attempt.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/grade'

  /visualizer_data/get_stats:
    get:
      operationId: api.visualizer_data.get_stats
      tags:
        - Visualizer Data
      summary: Get aggregated data for user's article exercise results.
      description: Get aggregated data for user's article exercise results.
      parameters:
        - name: ex_type
          in: query
          description: Exercise type to aggregate data for.
          schema:
            type: string
          required: True
        - name: from_datetime
          in: query
          description: Start datetime of the time frame to look in.
          schema:
            type: string
            format: date-time
          required: False
        - name: to_datetime
          in: query
          description: End datetime of the time frame to look in.
          schema:
            type: string
            format: date-time
          required: False
      responses:
        200:
          description: Successfully received the exercise attempt.
          content:
            application/json:
              schema:
                type: array
                items: {}



components:
  schemas:
    topic_word:
      properties:
        text:
          type: string
        lemma:
          type: string
        pos:
          type: string
        index:
          type: integer
        type:
          type: string
        feats:
          type: array
          items: {}
    exercise:
      properties:
        document_title:
          type: string
        paragraph_start:
          type: string
        paragraph_index:
          type: integer
        sentence_index:
          type: integer
        sentence_text:
          type: string
        schema:
          type: array
          items:
            $ref: "#/components/schemas/topic_word"
    exercises:
      type: array
      items:
        $ref: "#/components/schemas/exercise"
    grade:
      properties:
        ex_id:
          type: string
        user_id:
          type: string
        topic_word_index:
          type: integer
        guess:
          type: string
        answer:
          type: string
        is_correct:
          type: boolean
